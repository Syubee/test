2022-09-08 목요일 카리 수업내용

-----
git이란?
Git은 어디에 왜 어떻게 사용되는가?
Git 용어(커밋, 푸쉬, 브랜치 등) 별 설명 및 사용 이유
git-flow 란 무엇인가?
코드 리뷰란?(하는 이유까지 서술하시오)
-----



git이란?
소스코드를 효과적으로 관리하기 위한 "분산형 버전 관리 시스템"이다.
저장소는 두 종류로 원격저장소, 로컬저장소가 있다

Git은 어디에 왜 어떻게 사용되는가?
Git에서 소스코드가 변경된 이력을 확인할 수 있고 특정 시점에서 저장된 버전과 비교하거나 되돌아갈 수 있다.
또한 내가 올리려는 파일과 누군가가 편집한 내용이 충돌되면 서버업로드를 할때 경고메세지가 발생하여 덮어쓰기를 방지해준다.

Git 용어(커밋, 푸쉬, 브랜치 등) 별 설명 및 사용 이유
커밋 : 파일 및 폴더 추가/변경을 저장소에 기록할때 이력을 남겨준다. (영문/숫자로 이루어진 40자리의 고유이름으로)
커밋을 완료할땐 메세지를 필수로 남겨야 한다. (남기지 않을시 실행되지 않음)
주 사용 필수메세지 ex)
1. 커밋 내의 변경 내용을 요약
2. 빈 칸
3. 변경한 이유

푸쉬 : 웹 상의 원격저장소로 변경된 파일을 업로드하는것이다.

브랜치 : 소프트웨어등을 개발할때에 개발자들이 동일한 소스코드를 공유해 역할분담을 해서 다시 하나로 뭉치는 것.
각자의 개발자들이 버그수정, 새로운기능추가와 같은 일을 다 마친 후 변경된 내용들을 나중에 한번에 다시뭉쳐 만든다.
브랜치는 독자적 작업을 위한것이기 때문에 다른 브랜치의 영향을 받지않고 여러작업을 동시에 진행이 가능하다



git-flow 란 무엇인가?
git-flow란 기능이 아닌 서로간의 약속적인 방법론이다.

main : 개발을 마치고 하나의 완성된 버전을 최종배포하는 브랜치이다.
master : 기준이 되는 브랜치로 제품을 배포하는 브랜치
develop : 개발 브랜치로 개발자들이 이 브랜치를 기준으로 각자 작업한 기능들을 합(Merge)칩니다.
featrue : 단위 기능을 개발하는 브랜치로 기능 개발이 완료되면 develop 브랜치에 합칩니다.
release : 배포를 위해 master 브랜치로 보내긱 전에 품질검사를 하기위한 브랜치입니다.
hotfix : master 브랜치로 배포를 했는데 버그가 생겼을때 긴급 수정하는 브랜치입니다.

코드 리뷰란?(하는 이유까지 서술하시오)
코드리뷰는 의미그대로 타인이 작성한 코드를 리뷰 하는것.

코드리뷰란 한명또는 여러명의 개발자가 본인이 만들지 않은 코드의 내용을 점검하고 피드백을 주는 과정.
여기서 피드백이란 오타, 버그의가능성, 좋고 좋지않음의 피드백등등 의견을 공유하는 것

코드리뷰에서 가장 대표적 장점으로 "버그의 조기발견, 중복코드방지, 모듈의 재사용성"이 있다.
